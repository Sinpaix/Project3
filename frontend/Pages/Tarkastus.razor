@page "/tarkastus"
@using SharedLib
@inject HttpClient Http

<PageTitle>Tarkastus</PageTitle>


<h1>Tarkastukset</h1>

<button style="margin: 2em 0 2em 0" class="btn btn-primary" @onclick="@ShowUusiTarkastus">Uusi tarkastus</button>

@if (tarkastukset != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Kohde</th>
                <th>Syy</th>
                <th>Havainnot</th>
                <th>Tila</th>
                <th @onclick="sortDate">@sort</th>
                <th>Tekijä</th>
                <th></th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in tarkastukset)
            {
            <tr>
                <td>@item.Idtarkastus</td>
                <td>Kohteen nimi</td>
                <td>@item.Syy</td>
                <td>@item.Havainnot</td>
                <td>@tilat[item.TilanMuutos]</td>
                <td>@item.Aikaleima.ToString("dd.MM.yyyy HH:mm")</td>
                <td>@item.KayttajanNimi</td>
                <td><button class="btn btn-secondary" >...</button></td>
            </tr>
                
            }
        </tbody>
    </table>
}

@code {
    [CascadingParameter] public IModalService Modal { get; set; } = default!;
    private string[] tilat = { "Ei muutosta", "Käyttökunnossa", "Epäkunnossa", "Poistettu käytöstä" };

    private TarkastusDTO[]? tarkastukset;
    private string sort = "Luotu, laskeva";

    protected override async Task OnInitializedAsync()
    {
        tarkastukset = await Http.GetFromJsonAsync<TarkastusDTO[]>("/tarkastus/kaikki");
    }

    private async Task sortDate()
    {
        if (sort.Equals("Luotu, laskeva"))
        {
            sort = "Luotu, nouseva";
            tarkastukset = await Http.GetFromJsonAsync<TarkastusDTO[]>("/tarkastus/kaikki/nouseva");
        }
        else
        {
            sort = "Luotu, laskeva";
            tarkastukset = await Http.GetFromJsonAsync<TarkastusDTO[]>("/tarkastus/kaikki");
        }
    }

    private async Task ShowUusiTarkastus()
    {
        var uusiModal = Modal.Show<UusiTarkastus>("Uusi tarkastus");
        var result = await uusiModal.Result;

    }

    private async Task ShowTarkastus(int Id)
    {
        var parameters = new ModalParameters()
        .Add(nameof(TarkastusDetail.Id), Id);

        var uusiModal = Modal.Show<TarkastusDetail>("Tarkastus", parameters);
        var result = await uusiModal.Result;
    }
}

