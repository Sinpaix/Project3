@page "/auditointi"
@using SharedLib
@inject HttpClient Http
@inject IModalService ModalService
@inject NavigationManager NavigationManager

<h3 class="mb-4">Auditointi</h3>

<h4 class="mb-3">Auditointipohjat</h4>

@if (auditointipohjat != null)
{
	<table class="table table-striped">
		<thead>
			<tr>
				<th>ID</th>
				<th>Selite</th>
				<th>Luotu</th>
				<th>Käyttäjä</th>
				<th>Kohderyhmä</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in auditointipohjat)
			{
				<tr>
					<td>@item.Idauditointipohja</td>
					<td>@item.Selite</td>
					<td>@item.Luontiaika</td>
					<td>@item.Idkayttaja</td>
					<td>@item.Idkohderyhma</td>
				</tr>
			}

		</tbody>
	</table>

	<h4 class="mb-3">Vaatimuspohjat</h4>

	@if(vaatimuspohjat != null)
	{
		<table class="table table-striped">
			<thead>
				<tr>
					<th>ID</th>
					<th>Kuvaus</th>
					<th>Pakollisuus</th>
					<th>Auditointipohja</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var item in vaatimuspohjat)
				{
					<tr>
						<td>@item.Idvaatimuspohja</td>
						<td>@item.Kuvaus</td>
						<td>@item.Pakollisuus</td>
						<td>@item.Idauditointipohja</td>
					</tr>
				}

			</tbody>
		</table>
	}
}
else
{
	<p>ladataan dataa..</p>
}

<button @onclick="AddAuditointipohja">Lisää auditointipohja</button>
<button @onclick="AddVaatimuspohja">Lisää vaatimuspohja</button>

@code {
	AuditointipohjaDTO[]? auditointipohjat;
	VaatimuspohjaDTO[]? vaatimuspohjat;

	protected override async Task OnInitializedAsync()
	{
		auditointipohjat = await Http.GetFromJsonAsync<AuditointipohjaDTO[]>("auditointipohja/all");
		vaatimuspohjat = await Http.GetFromJsonAsync<VaatimuspohjaDTO[]>("vaatimuspohja/all");
	}

	async Task AddAuditointipohja()
	{
		var uusiModal = ModalService.Show<AddAuditointipohja>("Auditointipohja");
		var result = await uusiModal.Result;
	}

	async Task AddVaatimuspohja()
	{
		var uusiModal = ModalService.Show<AddVaatimuspohja>("Vaatimuspohja");
		var result = await uusiModal.Result;
	}



}
