@page "/kayttajat"
@using SharedLib
@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IModalService ModalService
@attribute [Authorize(Roles = "admin")]
@inject NavigationManager NavigationManager

<PageTitle>Käyttäjät</PageTitle>

<h1>Käyttäjät</h1>



@if (kayttajat == null)
{
    <p><em>Ladataan käyttäjälistaa</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nimi</th>
                <th>Käyttäjätunnus</th>
                <th>Luotu</th>
                <th>Rooli</th>
                <th>Aktiivinen</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in kayttajat)
            {
                <tr>
                    <td>@item.Nimi</td>
                    <td>@item.Kayttajatunnus</td>
                    <td>@item.Luotu.ToString("dd-MM-yyyy HH:mm")</td>
                    <td>@item.Rooli</td>
                    <td>
                        @if (@item.Poistettu == 1)
                        {
                            <span>poistettu</span>
                        }
                        else
                        {
                            <span>aktiivinen</span>
                        }
                    </td>
                    <td>
                        @if (@item.Rooli == "user")
                        {
                               <button style="font-size: 85%" class="btn btn-success" @onclick="@(e=> Muokkaa(item.Idkayttaja))">
                            <span class ="oi oi-pencil"></span>
                            </button>
                        }else{
                                <span>[tietoja ei voi muokata]</span>
                            }
                            </td>
                     
                </tr>
            }
        </tbody>
    </table>
}




@code {
    private KayttajaDTO[]? kayttajat;

    protected override async Task OnInitializedAsync()
    {
        kayttajat = await Http.GetFromJsonAsync<KayttajaDTO[]>("kayttaja/kayttajatunnukset");
    }

    private async Task Muokkaa(int Id)
    {
        var parameters = new ModalParameters()
        .Add(nameof(EditKayttaja.Id), Id);

        var uusiModal = ModalService.Show<EditKayttaja>("EditKayttaja", parameters);
        var result = await uusiModal.Result;

        //NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
              
        
    }
}

