@page "/vaatimuspohjat"
@using SharedLib
@inject HttpClient Http
@inject IModalService ModalService
@inject NavigationManager NavigationManager
@attribute [Authorize]

<div class="mb-5">
	<button class="btn btn-outline-primary" @onclick="Previous">Vaatimussivulle</button>
	<button class="btn btn-success" @onclick="LisaaVaatimuspohja">Lisää vaatimuspohja</button>
</div>

<h3>Vaatimuspohjat</h3>

@if (vaatimuspohjat != null)
{
	<table class="table table-striped">
		<thead>
			<tr>
				<th>ID</th>
				<th>Kuvaus</th>
				<th>Pakollisuus</th>
				<th>Auditointipohja</th>
				<th></th>
				<th>Kopioi pohja</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in vaatimuspohjat)
			{
				<tr>
					<td>@item.Idvaatimuspohja</td>
					<td>@item.Kuvaus</td>
					<td>@item.Pakollisuus</td>
					<td>@item.AuditointipohjaSelite</td>
					<td>
						<button style="font-size: 75%" class="btn btn-primary" @*@onclick="@(e=> Vaatimuspohja(item.Idvaatimuspohja))*@">
							<i class="oi oi-list"></i>
						</button>
					</td>
					<td><input type="checkbox" @bind-value="isChecked" @oninput="@(e=> Copy(item.Idvaatimuspohja))"></td>
				</tr>
			}

		</tbody>
	</table>

}
else
{
	<p>ladataan dataa..</p>
}


@code {
	VaatimuspohjaDTO[]? vaatimuspohjat;
	private bool isChecked = false;
	private int? pohjaId;


	protected override async Task OnInitializedAsync()
	{
		vaatimuspohjat = await Http.GetFromJsonAsync<VaatimuspohjaDTO[]>("vaatimuspohja/all");
	}

	async Task LisaaVaatimuspohja()
	{
		var uusiModal = ModalService.Show<AddVaatimuspohja>("Vaatimuspohja");
		var result = await uusiModal.Result;
		await OnInitializedAsync();
	}

	async Task Copy(int? id)
	{
		if (isChecked == false)
		{
			isChecked = true;
			pohjaId = id;

			Console.WriteLine($"pohja valittu {id}");

			var parameters = new ModalParameters()
			.Add(nameof(AddVaatimuspohja.Id), id);

			var uusiModal = ModalService.Show<AddVaatimuspohja>("Vaatimuspohja", parameters);
			var result = await uusiModal.Result;
			await OnInitializedAsync();

		}
		else
		{
			isChecked = false;
			pohjaId = null;
			Console.WriteLine("pohja nollattu");
		}
	}

	async Task Previous()
	{
		NavigationManager.NavigateTo("/vaatimukset");
	}

}
